{"version":3,"sources":["routes.js","Lock/locked.js","app.js","entry.js","main.js","passwordRecovery.js","settings/extensionManager.js","users/add.js","users/disable-edit.js","users/index.js"],"names":["define","Main","actions","index","entry","getSectionActions","getSectionTrees","login","PasswordRecovery","Lock","locked","ExtensionsManager","Users","deps","add","$","__","helpers","sectionApi","feedback","start","click","e","preventDefault","ajax","url","_url","type","data","uri","this","dataType","success","response","trigger","error","_","historyRouterFactory","loggerFactory","eventifier","statifier","urlUtil","logoutEvent","historyRouter","redirectUrl","appLogger","appController","options","currentRoute","apply","forwardTo","window","location","forward","selector","target","document","off","on","$elt","href","attr","redirect","getRouter","getLogger","onError","err","message","code","defaults","setState","$container","errorMessage","module","context","uiForm","section","treeFactory","versionWarning","sectionHeight","loadingBar","nav","search","$doc","init","ajaxSend","ajaxComplete","stop","scrollTo","id","panel","addClass","each","$treeElt","$actionBar","rootNode","treeUrl","root_url","treeActions","key","val","getBy","test","replace","serverParameters","extension","shownExtension","perspective","shownStructure","classUri","undefined","setHeights","show","loadContentBlock","feedbackType","conf","config","getDependencies","dependencies","ext","push","concat","getUnique","orig","a","i","length","inArray","progressConsole","msg","append","prop","scrollTop","installNextExtension","toInstall","indexCurrentToInstall","text","loaded","slideUp","$tr","appendTo","hide","$orig","slideDown","remove","styleTables","noAvailableExtensions","animate","width","percentByExt","hasNextExtensionToInstall","installError","info","postInstall","backgroundColor","done","setTimeout","reload","removeClass","$noAvailableExtElement","empty","ext_installed","event","stopPropagation","$installButton","parent","find","split","join","dialog","modal","height","buttons","alert","users","checkLogin","loginId","exit","structure","get","disable","editUser","enable","removeUser","tokenName","xsrfTokenName","cookie","confirm","deleted","datatable","$userList","filter","edit","model","label","sortable"],"mappings":"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","file":"routes.js","sourcesContent":["/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n * \n * \n */\n\n//@see http://forge.taotesting.com/projects/tao/wiki/Front_js\ndefine('controller/routes',[],function(){\n    'use strict';\n\n    return {\n        'Main': {\n            'actions' : {\n                'index' : 'controller/main',\n                'entry' : 'controller/entry',\n                'getSectionActions' : 'controller/main/actions',\n                'getSectionTrees' : 'controller/main/trees',\n                'login' : 'controller/login'\n            }\n        },\n        'PasswordRecovery': {\n            'actions' : {\n                'index' : 'controller/passwordRecovery'\n            },\n        },\n        'Lock': {\n            'actions' : {\n                'locked' : 'controller/Lock/locked'\n            }\n        },\n        'ExtensionsManager' : {\n            'actions' : {\n                'index' : 'controller/settings/extensionManager'\n            }\n        },\n        'Users' : {\n            'deps' : 'controller/users/disable-edit',\n            'actions' : {\n                'index' : 'controller/users/index',\n                'add'   : 'controller/users/add'\n            }\n        }\n    };\n});\n\n","define('controller/Lock/locked',['jquery', 'i18n', 'helpers', 'lock', 'layout/section', 'ui/feedback'], \nfunction($, __, helpers, Lock, sectionApi, feedback){\n    'use strict';\n\t\n    return {\n        start : function(){\n\n\t\t    $(\".forcerelease\").click(function(e) {\n\t\t    \t\n\t\t        e.preventDefault();\n\t\t        \n\t\t        $.ajax({\n                    url: helpers._url('forceRelease', 'Lock', 'tao'),\n                    type: \"POST\",\n                    data : {uri : $(this).data('id')},\n                    dataType: 'json',\n                    success : function(response){\n                        if(response.success){\n        \t\t            feedback().success(__('The lock has been released'));\n                            $('.tree').trigger('refresh.taotree'); \n                        }\n                        else{\n        \t\t            feedback().error(__('Unable to release the lock'));\n                        }\n                    },\n                    error : function(){\n    \t\t            feedback().error(__('Unable to release the lock'));\n                    }\n                });\n\t\t        \n\t\t    });\n        }\n    }\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('controller/app',[\n    'lodash',\n    'jquery',\n    'core/historyRouter',\n    'core/logger',\n    'core/eventifier',\n    'core/statifier',\n    'util/url',\n    'ui/feedback',\n    'layout/logout-event'\n], function (_, $, historyRouterFactory, loggerFactory, eventifier, statifier, urlUtil, feedback, logoutEvent) {\n    'use strict';\n\n    /**\n     * Shared router that will manage the page for each controller\n     * @type {historyRouter}\n     */\n    var historyRouter;\n\n    /**\n     *\n     */\n    var redirectUrl;\n\n    /**\n     * Creates a logger for the app\n     * @type {logger}\n     */\n    var appLogger = loggerFactory('controller/app');\n\n    /**\n     * Defines an application controller that will manage the routes through the history.\n     * It will start by dispatching the current location, in order to keep history consistency.\n     * To properly use this application controller you need to take care of it in each controller\n     * that is intended to be routed through the history. See samples below.\n     *\n     * @example\n     *  // Defines a controller that is routable through the history\n     *  return {\n     *      // Will be called each time the history routes the action to this controller\n     *      start: function start() {\n     *          // Take care of the application controller by applying a hook on each routable links\n     *          return appController.apply('.link');\n     *\n     *          // You can also be notified of a change in the route,\n     *          // and release some resources as this controller will be destroyed.\n     *          // Pay attention to the event namespace, it must be unique.\n     *          appController.on('change.myController', function() {\n     *              // Release the event, as this controller will be destroyed\n     *              appController.off('change.myController');\n     *\n     *              // Release resources\n     *              ...\n     *          });\n     *\n     *          // Do the stuff of the controller\n     *          ...\n     *\n     *          // If you need to change the current route you can rely on the router brought by the appController\n     *          appController.getRouter().redirect(url);\n     *  };\n     *\n     * @typedef {appController}\n     */\n    var appController = eventifier(statifier({\n        /**\n         * App controller entry point: set up the router.\n         * @param {Object} options\n         * @param {String} [options.forwardTo] - an optional route of a client controller to forward\n         * @param {String} [options.redirectUrl] - an optional url to redirect client on authorisation errors\n         */\n        start: function start(options){\n            var currentRoute;\n\n            // all links that are tagged with the \"router\" class are dispatched using the history router\n            appController.apply();\n\n            // dispatch the current route\n            if (options && options.forwardTo) {\n                currentRoute = options.forwardTo;\n            } else {\n                currentRoute = window.location + '';\n            }\n\n            if (options && options.redirectUrl) {\n                redirectUrl = options.redirectUrl || {};\n            }\n            historyRouter.forward(currentRoute);\n        },\n\n        /**\n         * Catch all links below the target, when they have the provided selector,\n         * then dispatch them using the history router.\n         * @param {String} [selector] - The CSS signature of links to catch (default: \".router\")\n         * @param {String|HTMLElement|jQuery} [target] - The container from which catch links (default: document)\n         * @returns {appController}\n         */\n        apply: function apply(selector, target) {\n            selector = selector || '.router';\n            target = target || document;\n\n            $(target).off('click.appController').on('click.appController', selector, function (e) {\n                var $elt, href;\n\n                // prevent the browser to actually change the page from this link\n                e.preventDefault();\n\n                // try to get the target of the link\n                $elt = $(this);\n                href = $elt.attr('href');\n                if (!href) {\n                    href = $('[href]:first-child', $elt).attr('href');\n                }\n\n                // use the history router to change the current view\n                // the called controller will have in charge to get the data and update the view accordingly\n                if (href) {\n                    historyRouter.redirect(href);\n                }\n            });\n\n            return this;\n        },\n\n        /**\n         * Exposes the router so other controllers can dispatch a route\n         *\n         * @returns {router} the router\n         */\n        getRouter: function getRouter() {\n            return historyRouter;\n        },\n\n        /**\n         * Exposes the logger so other controllers can log application level events\n         *\n         * @returns {logger} the router\n         */\n        getLogger: function getLogger() {\n            return appLogger;\n        },\n\n        /**\n         * Catches errors\n         * @param {Object} err\n         * @returns {appController}\n         */\n        onError: function onError(err) {\n            var message = err && err.message || err;\n            var options = {message: message};\n\n            appLogger.error(err);\n            if (err.code === 403){\n                options = _.defaults(options, redirectUrl ||  {});\n                logoutEvent(options);\n            }else{\n                feedback().error(message);\n            }\n            return this;\n        }\n    }));\n\n    // setup the history router\n    historyRouter = historyRouterFactory()\n        .on('dispatching', function (url) {\n            appController.setState('dispatching');\n            appController.trigger('change', url);\n        })\n        .on('dispatched', function (url) {\n            appController.setState('dispatching', false);\n            appController.trigger('started', url);\n        });\n\n    return appController;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\ndefine('controller/entry',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/feedback'\n], function ($, _, __, feedback) {\n    'use strict';\n\n    /**\n     * The login controller\n     */\n    return {\n\n        /**\n         * Controller entry point\n         */\n        start: function start() {\n            var $container = $('#entry-point-box');\n            var errorMessage = $container.data('errormessage');\n            if (errorMessage) {\n                feedback().error(errorMessage);\n            }\n        }\n    };\n});\n","/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('controller/main',[\n    'module',\n    'jquery',\n    'i18n',\n    'context',\n    'helpers',\n    'uiForm',\n    'layout/section',\n    'layout/actions',\n    'layout/tree',\n    'layout/version-warning',\n    'layout/section-height',\n    'layout/loading-bar',\n    'layout/nav',\n    'layout/search'\n],\nfunction (module, $, __, context, helpers, uiForm, section, actions, treeFactory, versionWarning, sectionHeight, loadingBar, nav, search) {\n    'use strict';\n\n    /**\n     * This controller initialize all the layout components used by the backend : sections, actions, tree, loader, etc.\n     * @exports tao/controller/main\n     */\n    return {\n        start : function(){\n\n            var $doc = $(document);\n\n            versionWarning.init();\n\n            //just before an ajax request\n            $doc.ajaxSend(function () {\n                loadingBar.start();\n            });\n\n            //when an ajax request complete\n            $doc.ajaxComplete(function () {\n                loadingBar.stop();\n            });\n\n            //navigation bindings\n            nav.init();\n\n            //search component\n            search.init();\n\n            //initialize sections \n            section.on('activate', function(section){\n\n                window.scrollTo(0,0);\n\n                // quick work around issue in IE11\n                // IE randomly thinks there is no id and throws an error\n                // I know it's not logical but with this 'fix' everything works fine\n                if(!section || !section.id) {\n                    return;\n                }\n\n                context.section = section.id;\n               \n                //initialize actions \n                actions.init(section.panel);\n\n                switch(section.type){\n                case 'tree':\n                    section.panel.addClass('content-panel');\n                    sectionHeight.init(section.panel);\n\n                    //set up the tree\n                    $('.taotree', section.panel).each(function(){\n                        var $treeElt = $(this),\n                            $actionBar = $('.tree-action-bar-box', section.panel);\n\n                        var rootNode = $treeElt.data('rootnode');\n                        var treeUrl = context.root_url;\n                        var treeActions = {};\n                        $.each($treeElt.data('actions'), function (key, val) {\n                            if (actions.getBy(val)) {\n                                treeActions[key] = val;\n                            }\n                        });\n                        \n                        if(/\\/$/.test(treeUrl)){\n                            treeUrl += $treeElt.data('url').replace(/^\\//, '');\n                        } else {\n                            treeUrl += $treeElt.data('url');\n                        }\n                        treeFactory($treeElt, treeUrl, {\n                            serverParameters : {\n                                extension    : context.shownExtension,\n                                perspective  : context.shownStructure,\n                                section      : context.section,\n                                classUri     : rootNode ? rootNode : undefined\n                            },\n                            actions : treeActions\n                        });\n                        $treeElt.on('ready.taotree', function() {\n                            $actionBar.addClass('active');\n                            sectionHeight.setHeights(section.panel);\n                        });\n                    });\n\n                    $('.navi-container', section.panel).show();\n                    break;\n                case 'content' : \n\n                    //or load the content block\n                    this.loadContentBlock();\n                    \n                    break;\n                }\n            })\n            .init();\n\n\n            //initialize legacy components\n            helpers.init();\n            uiForm.init();\n        }\n    };\n});\n\n\n","/**  \n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n * \n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\n *               \n */\n\n/**\n * Recovery password page controller\n * @author Aleh Hutnikau <hutnikau@1pt.com>\n */\ndefine('controller/passwordRecovery',[\n    'jquery',\n    'i18n',\n    'module',\n    'ui/feedback',\n    'layout/version-warning'\n], function ($, __, module, feedback,  versionWarning) {\n    'use strict';\n    var conf = module.config(),\n        feedbackType;\n\n    versionWarning.init();\n    if (conf.message) {\n        for (feedbackType in conf.message) {\n            if (conf.message[feedbackType]) {\n                feedback()[feedbackType](conf.message[feedbackType]);\n            }\n        }\n    }\n});\n\n","define('controller/settings/extensionManager',['jquery', 'i18n', 'context', 'helpers', 'ui/feedback'], function($, __, context, helpers, feedback){\n\n    var ext_installed = [];\n    var toInstall = [];\n    var indexCurrentToInstall = -1;\n    var percentByExt = 0;\n    var installError = 0;\n\n    function getDependencies(extension) {\n            var dependencies = [];\n            $('#' + extension + ' .dependencies li:not(.installed)').each(function() {\n                    var ext = $(this).attr('rel');\n                    var deps = getDependencies(ext);\n                    deps.push(ext);\n                    dependencies = dependencies.concat(deps);\n            });\n            return dependencies;\n    }\n\n    //Give an array with unique values\n    function getUnique(orig){\n            var a = [];\n            for (var i = 0; i < orig.length; i++) {\n                    if ($.inArray(orig[i], a) < 0) a.push(orig[i]);\n            }\n            return a;\n    }\n\n    function progressConsole(msg) {\n            $('#installProgress .console').append('<p>' + msg + '</p>');\n            $('#installProgress .console').prop({scrollTop: $('#installProgress .console').prop(\"scrollHeight\")});\n    }\n\n    function installNextExtension() {\n            var ext = toInstall[indexCurrentToInstall];\n            $('#installProgress p.status').text(__('Installing extension %s...').replace('%s', ext));\n            progressConsole(__('Installing extension %s...').replace('%s', ext));\n            $.ajax({\n                    type: \"POST\",\n                    url: helpers._url('install', 'ExtensionsManager', 'tao'),\n                    data: 'id='+ext,\n                    dataType: 'json',\n                    success: function(data) {\n                            helpers.loaded();\n                            if (data.success) {\n                                    progressConsole(__('> Extension %s succesfully installed.').replace('%s', ext));\n\n                                    // state that the extension is install in remaining dependencies.\n                                    $('li.ext-id.ext-' + ext).addClass('installed');\n\n                                    $('tr#'+ext).slideUp('normal', function() {\n                                            var $tr = $('<tr></tr>').appendTo($('#extensions-manager-container tbody')).hide();\n                                            var $orig = $('tr#' + ext + ' td');\n                                            $tr.append('<td class=\"ext-id bordered\">' + $($orig[0]).text() + '</td>');\n                                            $tr.append('<td class=\"author\">' + $($orig[1]).text() + '</td>');\n                                            $tr.append('<td class=\"version\">' + $($orig[2]).text() + '</td>');\n                                            $tr.slideDown('normal', function() {\n                                                    $('tr#' + ext).remove();\n\n                                                    // table changed, restyle.\n                                                    styleTables();\n\n                                                    // If the available extensions table is empty,\n                                                    // just inform the user.\n                                                    if ($('#available-extensions-container table tbody tr').length == 0){\n                                                            noAvailableExtensions();\n                                                    }\n\n                                                    $('#installProgress .bar').animate({width:'+=' + percentByExt + '%'}, 1000, function() {\n                                                            //Next\n                                                            indexCurrentToInstall++;\n                                                            hasNextExtensionToInstall();\n                                                    });\n                                            });\n                                    });\n                            } else {\n                                    installError = 1;\n                                    progressConsole('Installation of ' + ext + ' failed');\n                            }\n                            feedback().info(data.message);\n                    }\n            });\n\n            if (installError) {\n                    progressConsole(__('A fatal error occured during the installation process.'));\n            }\n    }\n\n    function postInstall(){\n        progressConsole(__('Post install processing'));\n        return $.ajax({\n            type: \"GET\",\n            url: helpers._url('postInstall', 'ExtensionsManager', 'tao')\n        });\n    }\n\n    function hasNextExtensionToInstall() {\n            if (indexCurrentToInstall >= toInstall.length) {\n                toInstall = [];\n                $('#installProgress .bar').animate({backgroundColor:'#bb6',width:'100%'}, 1000);\n\n                postInstall().done(function(data) {\n                    helpers.loaded();\n                    $('#installProgress .bar').animate({backgroundColor:'#6b6'}, 1000);\n                    $('#installProgress p.status').text(__('Installation done.'));\n                    progressConsole(__('> Installation done.'));\n                    progressConsole(__('... reloading page.'));\n\n                    setTimeout(function(){\n                        window.location.reload(true);\n                    }, 1000);\n                });\n            } else {\n                installNextExtension();\n            }\n    }\n\n    function styleTables(){\n            // Clean all to make this function able to \"restyle\" after\n            // data refresh.\n            $('#Extensions_manager table tr').removeClass('extensionOdd')\n                                                                             .removeClass('extensionEven');\n\n            $('#Extensions_manager table tr:nth-child(even)').addClass('extensionEven');\n            $('#Extensions_manager table tr:nth-child(odd)').addClass('extensionOdd');\n    }\n\n    function noAvailableExtensions(){\n            var $noAvailableExtElement = $('<div/>');\n            $noAvailableExtElement.attr('id', 'noExtensions')\n                                                      .addClass('ui-state-highlight')\n                                                      .text(__('No extensions available.'));\n\n            $('#available-extensions-container').empty().append($noAvailableExtElement);\n    }\n    \n    return {\n        start : function(){\n            \n            // Table styling.\n            styleTables();\n\n            $('#installProgress').hide();\n\n            //Detect wich extension is already installed\n            $('#extensions-manager-container .ext-id').each(function() {\n                    var ext = $(this).text();\n                    ext_installed.push(ext);\n                    $('.ext-id.ext-' + ext).addClass('installed');\n            });\n\n            $('#available-extensions-container tr input').click(function(event){\n                    event.stopPropagation();\n            });\n\n            $('#available-extensions-container tr input:checkbox').click(function() {\n                    var $installButton = $('#installButton');\n                    if ($(this).parent().parent().parent().find('input:checkbox:checked').length > 0){\n                            $installButton.attr('disabled', false);\n                    }\n                    else{\n                            $installButton.attr('disabled', true);\n                    }\n            });\n\n            $('#available-extensions-container #installButton').click(function(event) {\n                    //Prepare the list of extension to install in the order of dependency\n                    toInstall = [];\n                    $('#available-extensions-container input:checked').each(function() {\n                            var ext = $(this).prop('name').split('_')[1];\n                            var deps = getDependencies(ext);\n                            if (deps.length) {\n                                toInstall = toInstall.concat(deps);\n                            }\n                            toInstall.push(ext);\n                    });\n                    toInstall = getUnique(toInstall);\n                    if (!toInstall.length) {\n                            window.alert(__('Nothing to install !'));\n                            return false;\n                    }\n                    //Let's go\n                    percentByExt = 100 / toInstall.length;\n\n                    //Show the dialog with the result\n                    $('#installProgress p.status').text(__('%s extension(s) to install.').replace('%s', toInstall.length));\n                    $('#installProgress .bar').width(0);\n                    $('#installProgress .console').empty();\n                    progressConsole(__('Do you wish to install the following extension(s):\\n%s?').replace('%s', toInstall.join(', ')));\n                    $('#installProgress').dialog({\n                            modal: true,\n                            width: 400,\n                            height: 300,\n                            buttons: [{\n                                text: __('No'),\n                                click: function() {\n                                        $(this).dialog('close');\n                                }\n                            },{\n                                    text: __('Yes'),\n                                    click: function() {\n                                            //Run the install one by one\n                                            progressConsole(__('Preparing installation...'));\n                                            $('.ui-dialog-buttonpane').remove();\n                                            installError = 0;\n                                            indexCurrentToInstall = 0;\n                                            installNextExtension();\n                                    }\n                                }]\n                    });\n                    event.preventDefault();\n            });\n        }\n    };\n\n});\n\n","/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('controller/users/add',['jquery', 'module', 'helpers', 'users'], function($, module, helpers, users) {\n    'use strict';\n       \n    \n    /**\n     * The user add controller\n     * @exports controller/users/add\n     */    \n    return {\n        start : function(){\n            var conf = module.config();\n            var url  = helpers._url('checkLogin', 'Users', 'tao');\n            users.checkLogin(conf.loginId, url);\n            \n            if(conf.exit === true){\n\n                setTimeout(function(){\n                    //TODO would be better to clean up the form and switch the section\n                    window.location = helpers._url('index', 'Main', 'tao', {structure: 'users', ext : 'tao', section : 'list_users'});\n                }, 1000);\n            }\n        }\n    };\n});\n\n","/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('controller/users/disable-edit',['layout/section'], function(section) {\n    'use strict';\n       \n    /**\n     * Ensure edit section is disabled\n     * @exports controller/users/disable-edit\n     */    \n    return {\n        start : function(){\n            section.get('edit_user').disable();\n        }\n    };\n});\n\n","/**\n * @author Jérôme Bogaert <jerome@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('controller/users/index',['module', 'jquery', 'i18n', 'helpers', 'layout/section', 'ui/feedback', 'ui/datatable'], function(module, $, __, helpers, section, feedback) {\n    'use strict';\n\n    /**\n     * Edit a user (shows the edit section)\n     * @param {String} uri - the user uri\n     */\n    var editUser = function editUser(uri) {\n        section\n            .get('edit_user')\n            .enable()\n            .loadContentBlock(helpers._url('edit', 'Users', 'tao'), {uri : uri})\n            .show();\n    };\n\n    /**\n     * Removes a user\n     * @param {String} uri - the user uri\n     */\n    var removeUser = function removeUser(uri){\n        var tokenName = module.config().xsrfTokenName;\n        var data = {};\n\n        data.uri = uri;\n        data[tokenName] = $.cookie(tokenName);\n\n        //TODO use a confirm component\n        if (window.confirm(__('Please confirm user deletion'))) {\n            $.ajax({\n                url : helpers._url('delete', 'Users', 'tao'),\n                data : data,\n                type : 'POST'\n            }).done(function(response){\n                if(response.deleted){\n                    feedback().success(response.message);\n                } else {\n                    feedback().error(response.message);\n                }\n                $('#user-list').datatable('refresh');\n            });\n        }\n\t};\n\n    /**\n     * The user index controller\n     * @exports controller/users/index\n     */\n    return {\n        start : function(){\n            var $userList = $('#user-list');\n    \n            section.on('show', function(section){\n                if(section.id === 'list_users'){\n                    $userList.datatable('refresh');\n                }\n            });\n\n            //initialize the user manager component\n            $userList.datatable({\n                url: helpers._url('data', 'Users', 'tao'),\n                filter: true,\n                actions: {\n                    'edit': editUser,\n                    'remove': removeUser\n                },\n                'model': [\n                    {\n                        id : 'login',\n                        label : __('Login'),\n                        sortable : true\n                    },{\n                        id : 'firstname',\n                        label : __('First Name'),\n                        sortable : true\n                    },{\n                        id : 'lastname',\n                        label : __('Last Name'),\n                        sortable : true\n                    },{\n                        id : 'email',\n                        label : __('Email'),\n                        sortable : true\n                    },{\n                        id : 'roles',\n                        label : __('Roles'),\n                        sortable : false\n                    },{\n                        id : 'dataLg',\n                        label : __('Data Language'),\n                        sortable : true\n                    },{\n                        id: 'guiLg',\n                        label : __('Interface Language'),\n                        sortable : true\n                    }\n                ]\n            });\n        }\n    };\n});\n\n"]}